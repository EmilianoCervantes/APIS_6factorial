package com.sample
 
import com.sample.DroolsTest.Message;
//Creen al menos 10 reglas en Drools...
//de las cuales se implementen las dos de la figura 9 del artículo.


//Una sola declaración
//En vez de tener que declarar por cada tipo de sensor
//declare Sensor
	//nombre: String @key
	//Que HVAC/Climatiazacion analiza
	//tipoClimatizacion: TipoHVAC @key
	//Teoricamente sensores siempre encendidos...
	//Pero puede haber algún caso inesperado
	//encendido: boolean @key
	//presenciaDetectada: boolean @key
//end

//Cambio sensor por persona
//horas\precencia de 0 a 24
declare Persona
	nombre: String @key
	presencia: boolean @key
	quiereEncender: boolean @key
	//presenciaInicio: int @key
	//presenciaFin: int @key 
end

declare FuenteGasto
	//nombre: String @key
	encendidoTotal: boolean @key
	encendidoParcial: boolean @key
	tipoClimatizacion: TipoHVAC @key
end

declare TipoHVAC
	HVAC: String @key
end

declare FuenteNatural
	//Aportacion puede ser luz, calefaccion, otro
	aporta: TipoHVAC @key
	//nombre: String @key
	presenciaTotal: boolean @key
	presenciaParcial: boolean @key
	//horaInicio: int @key
	//horaFin: int @key
end

//Tsp=set point temperature, trec=recovery time
//Iluminación como electricidad
rule "Carga hechos"
	then
		TipoHVAC ac = new TipoHVAC("AC");
		insert(ac);
		TipoHVAC calef = new TipoHVAC("Calefacción");
		insert(calef);
		TipoHVAC ilum = new TipoHVAC("Iluminación");
		insert(ilum);
		
		//Por el momento dejaré uno de cada clase
		//insert(new FuenteGastoEnergetico("ACuno",false,ac));
		//insert(new FuenteGastoEnergetico("Calentador",false,calef));
		//insert(new FuenteGastoEnergetico("Focos",false,ilum));
		insert(new FuenteGasto(false,false,ac));
		insert(new FuenteGasto(false,false,calef));
		insert(new FuenteGasto(false,false,ilum));
		
		insert(new Persona("Emilino",true,true));
		
		//insert(new FuenteNatural(ilum,"LuzNatural",true));
		//insert(new FuenteNatural(calef,"Sol",true));
		//insert(new FuenteNatural(ac,"Ventana abierta",true));
		insert(new FuenteNatural(ilum,true,false));
		insert(new FuenteNatural(calef,true,false));
		insert(new FuenteNatural(ac,true,false));
end

rule "Encender luces"
	when
		$persona: Persona(quiereEncender == true)
		$fuenteIlum: FuenteGasto(encendidoTotal==false && tipoClimatizacion=="Iluminación")
	then
		$fuenteIlum.getEncendido()=true;
end

rule "Hay luz de día suficiente"
	when
		$ilum: FuenteNatural(aporta=="Iluminación" && presenciaTotal==true)
		$fuenteIlum: FuenteGasto(encendidoTotal==true && tipoClimatizacion=="Iluminación")
	then
		$fuenteIlum.getEncendidoTotal==false;
end
rule "Np hay luz de día suficiente"
	when
		$ilum: FuenteNatural(aporta=="Iluminación" && presenciaTotal==false && presenciaParcial==true)
		$fuenteIlum: FuenteGasto(encendidoTotal==true && tipoClimatizacion=="Iluminación")
	then
		$fuenteIlum.getEncendidoTotal==false;
		$fuenteIlum.getEncendidoParcial==true;
end

rule "No hay luz de día"
	when
		$ilum: FuenteNatural(aporta=="Iluminación" &&presenciaTotal==false &&presenciaParcial==false)
		$fuenteIlum: FuenteGasto(tipoClimatizacion=="Iluminación")
	then
		$fuenteIlum.getEncendidoParcial==false;
		$fuenteIlum.getEncendidoTotal==true;
end
//AC es aire acondicionado
rule "Gasto AC"
	when
	then
end

rule "Ahorro AC"
	when
	then
end

rule "Gasto Calefaccion"
	when
	then
end

rule "Ahorro Calefaccion"
	when
	then
end

rule "Hello World"
    when
        m : Message( status == Message.HELLO, myMessage : message )
    then
        System.out.println( myMessage );
        m.setMessage( "Goodbye cruel world" );
        m.setStatus( Message.GOODBYE );
        update( m );
end

rule "GoodBye"
    when
        Message( status == Message.GOODBYE, myMessage : message )
    then
        System.out.println( myMessage );
end